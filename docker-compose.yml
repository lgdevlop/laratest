version: '3'

services:
  app:
    build: 
      context: .docker/app
      dockerfile: Dockerfile.dev
    container_name: app
    entrypoint: dockerize -template .env.example:.env -wait tcp://db:3306 -timeout 40s ./entrypoint.sh
    environment: 
      - DB_HOST=db
      - DB_DATABASE=laravel
      - DB_USERNAME=root
      - DB_PASSWORD=root
    volumes: 
      - ./laravel:/var/www
      - ./.docker/app/.env.example:/var/www/.env.example
      - ./.docker/app/entrypoint.sh:/var/www/entrypoint.sh
    networks: 
      - app-network
    depends_on:
      - db
      - redis

  nginx:
    build: 
      context: .docker/nginx
      dockerfile: Dockerfile.dev
    container_name: nginx
    entrypoint: dockerize -template /var/www/nginx.conf:/etc/nginx/conf.d/nginx.conf -timeout 10s /var/www/entrypoint.sh
    environment: 
      - NGINX_HOST=app
      - NGINX_PORT=9000
    restart: always
    tty: true
    ports:
      - "8000:80"
    volumes: 
      - ./laravel:/var/www
      - ./.docker/nginx/nginx.conf:/var/www/nginx.conf
      - ./.docker/nginx/entrypoint.sh:/var/www/entrypoint.sh
    networks: 
      - app-network
    depends_on:
      - app

  db:
    build: 
      context: .docker/mysql
      dockerfile: Dockerfile.dev
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./.docker/dbdata:/var/lib/mysql
    environment: 
      - MYSQL_DATABASE=laravel
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
    networks: 
      - app-network

  redis:
    image: redis:alpine
    expose: 
      - 6379
    networks: 
      - app-network

networks: 
  app-network:
    driver: bridge
